---
export interface Props {
  href: string;
  className?: string;
  ariaLabel?: string;
  title?: string;
  disabled?: boolean;
}

const {
  href,
  className = "",
  ariaLabel,
  title,
  disabled = false,
} = Astro.props;

//external url function checker
const isExternalLink = (url: string): boolean => {
  try {
    const urlObj = new URL(url);
    const currentDomain = new URL(Astro.url.origin).hostname;
    return urlObj.hostname !== currentDomain && urlObj.protocol !== 'mailto:';
  } catch {
    return false;
  }
};


const isExternal = isExternalLink(href);
---

{
  disabled ? (
    <span
      class:list={["group inline-block", className]}
      title={title}
      aria-disabled={disabled}
    >
      <slot />
    </span>
  ) : (
    <a
      {href}
      class:list={["group inline-block hover:text-skin-accent", className]}
      aria-label={ariaLabel}
      title={title}
      target={isExternal ? "_blank" : undefined}
      rel={isExternal ? "noopener noreferrer" : undefined}
    >
      <slot />
    </a>
  )
}
